import "./styles.css";
import { useState, useEffect } from "react";

let isNonItTechnology = false;
let developerCount = 1;
let seniorityArray = [
  "Intermediate",
  "Intermediate",
  "Intermediate",
  "Intermediate",
  "Intermediate",
  "Intermediate",
  "Intermediate",
  "Intermediate",
  "Intermediate",
  "Intermediate",
];
let selectedInvolvementValue = "medium";

let totalInvestment = "23151235";
let totalSavings = "23151235";

//Navbar
function Logoo() {
  return (
    <div className="logoonnav">
      <div className="nav">
        <div className="indpro">
          <svg
            id="a"
            width="188"
            height="43"
            viewBox="0 0 188 43"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M0.692139 41.2879V35.5242H5.55557V6.419H0.692139V0.655273H17.7416V6.419H12.8781V35.5242H17.7416V41.2879H0.692139Z"
              fill="#131313"
            />
            <path
              d="M30.8617 18.1785L27.9903 11.1309H27.166L27.6331 18.4107V41.2879H20.7639V0.655273H28.9108L40.1626 23.7919L43.034 30.8394H43.8583L43.3911 23.5598V0.655273H50.2604V41.2879H42.2096L30.8617 18.1785Z"
              fill="#131313"
            />
            <path
              d="M54.7529 0.655435H68.6837C70.9337 0.62108 73.1704 1.00559 75.2782 1.78907C77.2067 2.54251 78.9026 3.78583 80.1965 5.39481C81.6546 7.26634 82.7029 9.42026 83.274 11.7184C84.6845 17.8076 84.6845 24.1359 83.274 30.2251C82.7029 32.5232 81.6546 34.6772 80.1965 36.5487C78.9067 38.1619 77.2096 39.4061 75.2782 40.1544C73.1722 40.9445 70.9343 41.3292 68.6837 41.288H54.7529V0.655435ZM68.6837 34.8824C69.7594 34.9498 70.8367 34.7803 71.8389 34.3861C72.8411 33.9918 73.7434 33.3825 74.4813 32.6015C75.9845 30.652 76.7175 28.2227 76.5421 25.7725V16.2119C76.7163 13.7619 75.9833 11.3331 74.4813 9.38292C73.7411 8.60502 72.8384 7.99769 71.8368 7.60365C70.8352 7.2096 69.759 7.03842 68.6837 7.10206H62.0755V34.9234L68.6837 34.8824Z"
              fill="#131313"
            />
            <path
              d="M87.2581 41.2881V0.655474H104.184C105.709 0.553026 107.237 0.798867 108.651 1.37414C110.066 1.94941 111.329 2.83883 112.344 3.97436C114.17 6.6762 115.144 9.85704 115.144 13.1116C115.144 16.3661 114.17 19.5469 112.344 22.2488C111.329 23.3843 110.066 24.2737 108.651 24.849C107.237 25.4243 105.709 25.6701 104.184 25.5677H94.5669V41.2881H87.2581ZM94.5806 19.1621H103.414C104.496 19.2222 105.559 18.865 106.382 18.1651C106.774 17.7219 107.072 17.2039 107.256 16.6427C107.44 16.0815 107.507 15.4887 107.454 14.9008V11.3224C107.509 10.7365 107.442 10.1455 107.258 9.58628C107.074 9.02705 106.775 8.5115 106.382 8.07176C105.565 7.35919 104.499 6.99597 103.414 7.06108H94.5806V19.1621Z"
              fill="#131313"
            />
            <path
              d="M124.64 41.288H117.332V0.655462H134.257C135.78 0.549251 137.306 0.787853 138.722 1.35328C140.138 1.91872 141.406 2.79625 142.432 3.91975C144.41 6.52377 145.384 9.74565 145.179 13.0023C145.279 15.6436 144.672 18.264 143.421 20.5961C142.285 22.5593 140.445 24.023 138.269 24.6935L145.701 41.288H137.802L131.056 25.2809H124.64V41.288ZM133.488 19.2303C134.563 19.2921 135.621 18.9399 136.442 18.247C136.845 17.8019 137.15 17.2779 137.336 16.7086C137.523 16.1394 137.588 15.5375 137.527 14.9418V11.3497C137.588 10.754 137.523 10.1521 137.336 9.58285C137.15 9.01359 136.845 8.48948 136.442 8.04441C135.621 7.35145 134.563 6.99934 133.488 7.06107H124.64V19.2303H133.488Z"
              fill="#131313"
            />
            <path
              d="M162.504 41.9984C160.234 42.0289 157.981 41.6207 155.868 40.7965C153.892 40.006 152.156 38.7216 150.826 37.0678C149.315 35.1394 148.22 32.9215 147.611 30.553C146.079 24.2702 146.079 17.7145 147.611 11.4318C148.225 9.06504 149.319 6.84801 150.826 4.91687C152.156 3.26307 153.892 1.97874 155.868 1.18826C160.153 -0.396088 164.868 -0.396088 169.153 1.18826C171.129 1.97874 172.866 3.26307 174.195 4.91687C175.702 6.84801 176.796 9.06504 177.41 11.4318C178.942 17.7145 178.942 24.2702 177.41 30.553C176.801 32.9215 175.706 35.1394 174.195 37.0678C172.866 38.7216 171.129 40.006 169.153 40.7965C167.036 41.6208 164.778 42.0289 162.504 41.9984ZM162.504 35.5928C163.651 35.661 164.799 35.4731 165.864 35.043C166.929 34.6129 167.884 33.9514 168.659 33.107C170.227 31.0914 170.999 28.5749 170.829 26.0322V15.9116C170.996 13.3692 170.225 10.8536 168.659 8.83672C167.006 7.23165 164.787 6.33311 162.476 6.33311C160.166 6.33311 157.947 7.23165 156.294 8.83672C154.728 10.8536 153.956 13.3692 154.123 15.9116V26.0322C153.954 28.5749 154.726 31.0914 156.294 33.107C157.074 33.9597 158.037 34.6261 159.113 35.0565C160.188 35.487 161.347 35.6703 162.504 35.5928Z"
              fill="#131313"
            />
            <path
              d="M186.615 40.9196C184.766 42.3848 181.838 42.389 179.993 40.9196C179.622 40.551 179.333 40.1086 179.146 39.6214C178.959 39.1341 178.878 38.6131 178.908 38.0924V36.7266C178.878 36.206 178.959 35.685 179.146 35.1978C179.519 34.228 180.402 33.5389 181.383 33.199C181.997 32.9864 182.646 32.876 183.304 32.876C183.963 32.876 184.613 32.9868 185.228 33.2002C186.207 33.5399 187.083 34.232 187.45 35.2008C187.635 35.6876 187.715 36.2072 187.686 36.7266V38.0924C187.715 38.6118 187.635 39.1316 187.45 39.6184C187.266 40.1052 186.981 40.5483 186.615 40.9196Z"
              fill="#131313"
            />
          </svg>
        </div>
        <div className="indpro_bg">
          <svg
            id="b"
            width="357"
            height="101"
            viewBox="0 0 357 101"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M14.7673 -519.216C23.5522 -525.595 35.4478 -525.595 44.2327 -519.216L346.666 -299.623C355.451 -293.244 359.127 -281.938 355.772 -271.617L240.252 83.6915C236.897 94.0123 227.273 101 216.414 101H-157.414C-168.273 101 -177.897 94.0123 -181.252 83.6915L-296.772 -271.617C-300.127 -281.938 -296.451 -293.244 -287.666 -299.623L14.7673 -519.216Z"
              fill="#EBB7A0"
            />
          </svg>
        </div>
        <div className="left_bg">
          <svg
            width="1020"
            height="177"
            viewBox="0 0 1020 177"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1219.84 174.646C1254.47 174.568 1287.48 158.966 1309.52 132.256L1747.26 -398.219C1769.3 -424.929 1777.98 -459.839 1770.83 -493.068L1628.92 -1153.01C1621.78 -1186.24 1599.59 -1214.17 1568.64 -1228.89L953.942 -1521.35C922.991 -1536.08 886.647 -1535.99 855.197 -1521.13L230.588 -1225.88C199.138 -1211.01 176.006 -1182.98 167.74 -1149.71L3.56366 -489.084C-4.70272 -455.821 2.79627 -420.947 23.9379 -394.334L443.823 134.207C464.965 160.82 497.448 176.274 532.077 176.196L1219.84 174.646Z"
              fill="#FCEEE8"
            />
          </svg>
        </div>
      </div>
      <div className="bg">
        <svg
          width="587"
          height="1100"
          viewBox="0 0 587 1302"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M-374.737 11.6248C-342.674 -3.87496 -305.325 -3.87491 -273.263 11.6248L363.525 319.459C395.588 334.959 418.875 364.271 426.794 399.099L584.067 1090.8C591.986 1125.62 583.675 1162.18 561.487 1190.11L120.816 1744.8C98.6279 1772.73 64.9777 1789 29.3905 1789H-677.391C-712.978 1789 -746.628 1772.73 -768.816 1744.8L-1209.49 1190.11C-1231.67 1162.18 -1239.99 1125.62 -1232.07 1090.8L-1074.79 399.099C-1066.87 364.271 -1043.59 334.959 -1011.53 319.459L-374.737 11.6248Z"
            fill="#FBF5E5"
          />
        </svg>
      </div>
    </div>
  );
}

// Technology;
function TechContainer() {
  return (
    <div>
      Technology
      <div className="techcontainer">
        <ButtonWithSVG
          svg={
            <svg width="24" height="24">
              <path d="M8.579 10.956a1.95 1.95 0 0 1 .125-.053c-.041.016-.083.035-.125.053zM2.496 22.174h1.59c.005 0 .011.006.017.005 2.378-.122 3.48-1.352 4.034-3.124.431-1.375.784-2.532 1.094-3.504v.001l.011-.035a25.146 25.146 0 0 1 2.215-2.687h.016c1.065 3.257 1.476 9.068 4.591 9.068.126 0 .257.003.384-.01-.127.013-.25.03-.376.03h2.474a2.463 2.463 0 0 1-.796-.144 2.466 2.466 0 0 0 .796.125c.459 0 .842-.035 1.176-.144-.334.109-.717.162-1.176.162h2.484l.001-.005.913-.009c-.117 0-.226-.021-.331-.056l.004-.005c.103.031.21.037.325.037 2.403 0 4.826-4.315 8.835-11.483h-1.574l.001.064h-.293c-1.478 2.624-2.511 4.866-3.387 6.658.877-1.794 1.909-4.034 3.386-6.658h-2.405c-.08 0-.157-.011-.234-.006l-.001-.005c-2.321.14-3.407 1.318-3.953 3.067-.956 3.056-1.535 5.034-2.092 6.297 0 0 0-.001 0 0 0 .003-.002.003-.002.004v-.003a10.302 10.302 0 0 1-1.191.991c.114.137.231.265.354.382.186.181.385.333.602.45h-.001a2.738 2.738 0 0 1-.603-.45 4.648 4.648 0 0 1-.354-.382 8.53 8.53 0 0 0 .408-.307c-.749-1.659-1.184-4.478-1.991-6.673.807 2.194 1.243 5.014 1.991 6.673.26-.207.52-.435.781-.685-1.082-3.242-1.47-9.136-4.606-9.136a3.759 3.759 0 0 0 0-.001l-1.233-.017c.196 0 .381.055.557.055-.176 0-.361-.055-.556-.055-.017 0-.034-.004-.051-.003.017 0 .034-.006.051-.006h-4.96c-.028 0-.056-.004-.085-.004-2.706 0-6.435 5.059-8.115 11.524h1.273zm23.665-11.499c-.807.254-1.401.694-1.842 1.277.441-.583 1.034-1.023 1.842-1.277zm-3.792 10.866-.023.012-.034.017-.002.001.059-.029zm-.329.146c.005-.004.01-.004.016-.006l-.015.006-.033.012.032-.012zm-.039.016H22h.001zm-.25.084a1.567 1.567 0 0 1 .081-.025l.03-.011c.011-.004.022-.006.031-.01l.026-.01.064-.022a.011.011 0 0 0 .008-.003l-.007.003-.063.022-.026.009c-.009.004-.02.007-.031.01-.009.004-.02.006-.031.011l-.027.009a.85.85 0 0 0-.054.016l-.004.001.003-.001zM8.704 10.91v-.008l.007.008c-.053 0-.105.037-.157.059l.025-.012a3.499 3.499 0 0 0-.126.057c-.022.011-.045.021-.067.033zm.128-.064zm.359-.108c-.007.004-.012.019-.018.019l-.132.035c-.005 0-.009.004-.015.005l-.037.011c.013-.004.025-.011.037-.013.006 0 .011-.005.015-.005l.132-.035c.006 0 .011-.018.018-.018.012-.004.024-.02.037-.021-.013.001-.025.021-.037.023zm.058-.006a.087.087 0 0 1-.019.01c.006-.004.012-.011.019-.013.013-.004.025-.014.039-.014-.014 0-.026.015-.039.017zm.483-.016c-.024-.004-.047-.002-.07-.002H9.66c.023 0 .046-.003.07 0l.008-.001c-.002.001-.003.003-.006.003zm.062-.031c-.058 0-.115.012-.174.016.008 0 .016.01.024.012-.015-.002-.03-.011-.045-.012.007-.001.014-.005.021-.005l-.008-.002a.04.04 0 0 0-.012-.006v.005c-.064.004-.06.005-.088.008l-.004-.005c-.008 0-.014.004-.021.004-.011.004-.024.004-.036.005-.007 0-.014 0-.021.004-.013.004-.025.006-.037.008l-.003.001h.003c.013 0 .024-.006.037-.009.007 0 .014-.005.021-.005.012 0 .024-.004.036-.006.006 0 .012 0 .02-.004l.072-.007.014.001c.068-.006.134-.008.201-.008zm.161.07a1.587 1.587 0 0 0-.137-.029l-.012-.003a2.086 2.086 0 0 1 .148.032l.004.001h-.002zm.979.782-.001.001a2.294 2.294 0 0 0-.468-.584l.007.004c.169.147.321.344.461.58zm.22.424zm2.511-1.217a3.843 3.843 0 0 1-.001.001zm-1.761 1.702-.004-.008.004.008zm2.305-1.499zm.731-.204zm2.164 11.015zm3.032-.197-.021.011.022-.012zm.626.323.126.011a4.557 4.557 0 0 1-.126-.011zm-.02-.849.001-.005.001-.001c.157.267.331.487.527.639a2.133 2.133 0 0 1-.528-.633zm.446.86c-.008.004-.015.004-.023.004h-.002c.008 0 .016 0 .023-.004.015 0 .03 0 .046-.004h.002c-.016.004-.031.004-.046.004zm.189-.021c-.017.003-.035.004-.053.008-.005 0-.01.004-.015.004h-.004c-.016.002-.033.005-.049.005h-.002c.016 0 .033-.004.049-.005h.004c.005 0 .01-.004.015-.004.018-.004.036-.006.053-.008h.004-.002z"></path>
            </svg>
          }
          name="Dot Net"
        />
        <ButtonWithSVG
          svg={
            <svg width="24" height="24">
              <path d="M12.034 13.666a.495.495 0 0 1-.274-.082C11.647 13.51 9 11.744 9 9.5c0-2.381 1.709-3.63 3.217-4.733 1.225-.896 2.283-1.67 2.283-2.868 0-.665-.419-.994-.424-.998a.5.5 0 0 1 .595-.803c.034.025.828.627.828 1.8 0 1.706-1.369 2.707-2.693 3.675C11.363 6.63 10 7.626 10 9.5c0 1.704 2.287 3.233 2.31 3.249a.5.5 0 0 1-.276.917z"></path>
              <path d="M14 13.5a.5.5 0 0 1-.5-.5c0-.811-.275-1.107-.624-1.483-.39-.42-.876-.944-.876-2.108 0-2.235 4.278-4.589 4.766-4.85a.5.5 0 1 1 .472.882C15.6 6.319 13 8.172 13 9.409c0 .771.255 1.047.609 1.428.397.428.891.96.891 2.163a.5.5 0 0 1-.5.5z"></path>
              <path d="M9.044 16.021c-1.799 0-3.321-.208-3.998-.628-.451-.281-.546-.624-.546-.862 0-1.191 2.375-1.779 3.79-2.024a.5.5 0 0 1 .171.985c-1.42.246-2.833.754-2.965 1.066.551.727 7.976.752 11.361-.924a.5.5 0 1 1 .443.897c-1.994.987-5.459 1.49-8.256 1.49zm1.88 2.249c-3.212 0-3.62-1.279-3.67-1.556a.5.5 0 0 1 .978-.207c.101.27.934.913 3.588.731 3.199-.218 3.762-.741 3.784-.763.125-.247.401-.307.646-.183.247.124.32.463.196.71-.18.356-1.012.991-4.558 1.233-.346.024-.667.035-.964.035zm.493 1.994c-2.155 0-3.578-.778-3.667-.828a.499.499 0 1 1 .489-.872c.116.064 2.895 1.559 6.563-.022a.5.5 0 1 1 .396.918c-1.397.602-2.684.804-3.781.804z"></path>
              <path d="M7.846 22.304c-1.742 0-3.155-.118-3.764-.365-.506-.205-.582-.535-.582-.713 0-.994 1.65-1.583 2.359-1.792a.5.5 0 0 1 .281.96c-.604.177-1.228.473-1.503.694 2.043.625 12.955-.098 14.251-1.433a.5.5 0 0 1 .718.696c-1.206 1.243-7.478 1.953-11.76 1.953z"></path>
              <path d="M9.24 23.992c-1.885 0-3.386-.144-4.023-.368a.5.5 0 1 1 .331-.943c1.783.626 11.376.526 15.445-1.912a.5.5 0 0 1 .514.858c-2.939 1.761-8.407 2.365-12.267 2.365zm7.73-5.79a.5.5 0 0 1-.195-.96c.967-.409 3.726-1.881 3.726-3.233 0-.338-.12-.462-.209-.525-.479-.338-1.713-.06-2.234.127a.5.5 0 0 1-.34-.941c.213-.078 2.114-.731 3.148-.005.29.204.635.602.635 1.344 0 2.258-3.893 3.967-4.336 4.154a.526.526 0 0 1-.195.039z"></path>
            </svg>
          }
          name="Java"
        />
        <ButtonWithSVG
          svg={
            <svg width="24" height="24">
              <path d="M12.744 18.458a.874.874 0 0 1-.872-.877.873.873 0 1 1 1.744 0c0 .485-.39.877-.872.877M10.072 20c5.078 0 4.761-2.214 4.761-2.214l-.006-2.292H9.982v-.689h6.769S20 15.175 20 10.026c0-5.15-2.835-4.968-2.835-4.968h-1.693v2.39s.091 2.85-2.79 2.85H7.876s-2.7-.043-2.7 2.624v4.41S4.766 20 10.072 20M7.257 1.542c.482 0 .871.392.871.877a.872.872 0 1 1-1.743 0c0-.485.39-.877.872-.877M9.928 0c-5.077 0-4.76 2.214-4.76 2.214l.006 2.292h4.845v.689h-6.77S0 4.825 0 9.974c0 5.15 2.836 4.968 2.836 4.968h1.692v-2.39s-.091-2.85 2.791-2.85h4.805s2.7.043 2.7-2.624v-4.41S15.234 0 9.928 0"></path>
            </svg>
          }
          name="Python"
        />
        <ButtonWithSVG
          svg={
            <svg width="24" height="24">
              <path d="M15.998 28.895a1.94 1.94 0 0 1-.969-.259l-3.086-1.826c-.46-.257-.235-.349-.083-.402.614-.213.739-.262 1.394-.635.069-.038.159-.024.231.018l2.37 1.407a.304.304 0 0 0 .287 0l9.241-5.333a.292.292 0 0 0 .141-.25V10.95a.3.3 0 0 0-.143-.255l-9.237-5.329a.29.29 0 0 0-.285 0l-9.235 5.331a.296.296 0 0 0-.146.253v10.666c0 .102.056.198.145.247l2.532 1.462c1.374.687 2.215-.122 2.215-.935V11.86c0-.149.12-.266.269-.266h1.172c.146 0 .267.117.267.266v10.53c0 1.833-.998 2.885-2.736 2.885-.534 0-.955 0-2.129-.579L5.79 23.301a1.953 1.953 0 0 1-.969-1.686V10.95c0-.693.371-1.339.969-1.684l9.242-5.34a2.023 2.023 0 0 1 1.942 0l9.241 5.34c.599.346.971.992.971 1.684v10.665c0 .693-.372 1.337-.971 1.686l-9.241 5.335a1.942 1.942 0 0 1-.973.259zm2.855-7.348c-4.045 0-4.892-1.857-4.892-3.414 0-.148.118-.266.266-.266h1.195c.133 0 .245.096.265.226.18 1.216.717 1.831 3.164 1.831 1.946 0 2.775-.441 2.775-1.473 0-.596-.234-1.037-3.26-1.334-2.528-.25-4.093-.809-4.093-2.831 0-1.865 1.572-2.977 4.207-2.977 2.961 0 4.425 1.027 4.611 3.233a.27.27 0 0 1-.267.291h-1.2a.266.266 0 0 1-.259-.209c-.288-1.28-.988-1.689-2.886-1.689-2.126 0-2.373.74-2.373 1.295 0 .673.292.869 3.161 1.248 2.84.375 4.19.907 4.19 2.902 0 2.014-1.678 3.167-4.606 3.167z"></path>
            </svg>
          }
          name="Node Js"
        />
        <ButtonWithSVG
          svg={
            <svg width="24" height="24">
              <path d="M4.514,15.801c0.211,0.07,0.422,0.141,0.638,0.202c-0.07,0.281-0.131,0.558-0.188,0.844c-0.492,2.602-0.108,4.664,1.12,5.372c1.266,0.731,3.394-0.019,5.466-1.833c0.164-0.145,0.328-0.295,0.492-0.455c0.206,0.202,0.422,0.394,0.637,0.581c2.006,1.725,3.989,2.423,5.213,1.716c1.266-0.731,1.678-2.948,1.144-5.648c-0.042-0.206-0.089-0.417-0.141-0.633c0.15-0.042,0.295-0.089,0.441-0.136C22.041,14.916,24,13.467,24,11.981c0-1.42-1.847-2.798-4.397-3.675V8.305c-0.253-0.084-0.506-0.164-0.759-0.239c0.042-0.173,0.08-0.347,0.117-0.52c0.577-2.794,0.197-5.038-1.083-5.779c-1.233-0.708-3.244,0.028-5.278,1.8c-0.202,0.173-0.398,0.356-0.586,0.539c-0.127-0.122-0.258-0.244-0.389-0.361C9.492,1.851,7.355,1.054,6.075,1.8C4.847,2.513,4.481,4.627,4.997,7.269c0.052,0.263,0.108,0.52,0.173,0.783C4.87,8.136,4.575,8.23,4.298,8.329C1.795,9.196,0,10.565,0,11.981C0,13.444,1.912,14.91,4.514,15.801z M10.889,19.62c-0.773,0.708-1.669,1.27-2.644,1.655c-0.52,0.248-1.12,0.272-1.655,0.061c-0.745-0.431-1.055-2.086-0.633-4.313c0.052-0.262,0.108-0.525,0.173-0.783c1.05,0.225,2.109,0.38,3.183,0.459c0.619,0.877,1.298,1.716,2.025,2.503c-0.15,0.145-0.3,0.286-0.45,0.417L10.889,19.62z M16.842,10.818c-0.22-0.413-0.445-0.825-0.68-1.228c-0.23-0.398-0.469-0.792-0.717-1.181c0.755,0.094,1.477,0.22,2.152,0.375C17.381,9.478,17.128,10.153,16.842,10.818z M16.851,13.152c0.3,0.68,0.563,1.369,0.792,2.077c-0.727,0.164-1.462,0.291-2.203,0.375c0.253-0.394,0.492-0.797,0.727-1.2C16.406,13.991,16.631,13.574,16.851,13.152z M16.309,11.986c-0.314,0.647-0.652,1.284-1.012,1.912c-0.356,0.623-0.736,1.228-1.134,1.828c-0.698,0.052-1.425,0.075-2.161,0.075c-0.736,0-1.448-0.023-2.137-0.066c-0.408-0.595-0.792-1.205-1.153-1.828c-0.361-0.623-0.694-1.256-1.008-1.903H7.702c0.309-0.647,0.647-1.28,1.003-1.903c0.356-0.623,0.741-1.228,1.144-1.823c0.703-0.052,1.42-0.08,2.152-0.08s1.453,0.028,2.152,0.08c0.398,0.591,0.778,1.195,1.139,1.814C15.653,10.711,15.99,11.344,16.309,11.986z M7.832,9.599c-0.23,0.398-0.455,0.805-0.666,1.218c-0.295-0.698-0.544-1.382-0.75-2.043c0.675-0.15,1.392-0.272,2.137-0.366C8.306,8.797,8.062,9.195,7.832,9.599z M7.167,13.189L7.167,13.189c0.216,0.413,0.436,0.821,0.67,1.224c0.239,0.408,0.483,0.816,0.741,1.214c-0.731-0.08-1.458-0.197-2.175-0.352C6.609,14.6,6.867,13.902,7.167,13.189z M12.038,18.48L12.038,18.48c-0.478-0.515-0.956-1.086-1.42-1.701c0.45,0.019,0.914,0.028,1.383,0.028c0.483,0,0.956-0.009,1.425-0.033C12.995,17.369,12.531,17.937,12.038,18.48z M18.165,19.888L18.165,19.888c-0.043,0.571-0.324,1.105-0.774,1.466c-0.745,0.431-2.334-0.131-4.05-1.603c-0.197-0.169-0.394-0.352-0.595-0.539c0.717-0.792,1.378-1.631,1.978-2.512c1.073-0.089,2.142-0.253,3.197-0.492c0.047,0.192,0.089,0.384,0.127,0.572C18.278,17.793,18.315,18.847,18.165,19.888z M18.572,9.032c0.244,0.07,0.478,0.145,0.703,0.22c2.184,0.75,3.717,1.866,3.717,2.719c0,0.919-1.636,2.105-3.975,2.878c-0.131,0.042-0.262,0.084-0.398,0.122c-0.328-1.022-0.731-2.02-1.195-2.991C17.874,11.024,18.254,10.039,18.572,9.032z M13.26,4.326L13.26,4.326c1.745-1.518,3.371-2.113,4.112-1.687c0.792,0.455,1.097,2.292,0.6,4.706c-0.033,0.159-0.066,0.314-0.108,0.469c-1.041-0.234-2.095-0.403-3.155-0.497C14.1,6.444,13.434,5.61,12.712,4.827C12.895,4.654,13.073,4.49,13.26,4.326z M12.01,5.545c0.492,0.534,0.956,1.096,1.387,1.677c-0.928-0.042-1.861-0.042-2.789,0C11.067,6.618,11.541,6.056,12.01,5.545z M6.572,2.672C7.36,2.213,9.108,2.869,10.95,4.5c0.117,0.103,0.234,0.216,0.356,0.328C10.579,5.61,9.909,6.444,9.295,7.316C8.236,7.41,7.186,7.574,6.145,7.804C6.084,7.565,6.033,7.321,5.981,7.077C5.54,4.808,5.831,3.098,6.572,2.672z M4.627,9.28c0.267-0.094,0.539-0.178,0.811-0.258c0.319,1.017,0.703,2.016,1.148,2.981c-0.45,0.98-0.839,1.992-1.162,3.023l-0.001,0.001c-0.197-0.056-0.389-0.117-0.581-0.183c-0.998-0.314-2.133-0.811-2.953-1.462c-0.473-0.328-0.792-0.834-0.881-1.402C1.008,11.122,2.489,10.025,4.627,9.28z"></path>
            </svg>
          }
          name="React"
        />
        <ButtonWithSVG
          svg={
            <svg width="24" height="24">
              <path d="M12,24c-0.12,0-0.24-0.029-0.349-0.086l-9.293-4.891c-0.213-0.112-0.359-0.319-0.394-0.558L0.007,4.769c-0.05-0.355,0.157-0.696,0.496-0.814l11.25-3.913c0.16-0.056,0.333-0.056,0.493,0l11.25,3.913c0.339,0.118,0.546,0.459,0.496,0.814l-1.957,13.696c-0.034,0.238-0.181,0.446-0.394,0.558l-9.293,4.891C12.24,23.971,12.12,24,12,24z M3.395,17.874L12,22.402l8.605-4.529L22.42,5.168L12,1.544L1.58,5.168L3.395,17.874z"></path>
              <path d="M18.265,18.008c-0.283,0-0.554-0.161-0.681-0.435L12.001,5.525L6.446,17.572c-0.173,0.376-0.619,0.54-0.995,0.367c-0.376-0.173-0.541-0.619-0.367-0.995l6.235-13.52C11.441,3.158,11.707,2.988,12,2.988h0c0.292,0,0.558,0.169,0.681,0.435l6.265,13.52c0.174,0.376,0.01,0.822-0.365,0.996C18.478,17.986,18.371,18.008,18.265,18.008z"></path>
              <path d="M16.409,14.002H7.612c-0.414,0-0.75-0.336-0.75-0.75s0.336-0.75,0.75-0.75h8.796c0.414,0,0.75,0.336,0.75,0.75S16.823,14.002,16.409,14.002z"></path>
            </svg>
          }
          name="Angular"
        />
        <ButtonWithSVG
          svg={
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="32"
              height="32"
              viewBox="0 0 128 128"
            >
              <path
                d="M 110.43093,16.935847 C 98.552474,-0.076153 75.089104,-5.118154 58.130818,5.695846 l -29.793,19.000001 c -4.030441,2.529 -7.488786,5.871 -10.15468,9.814 -2.665895,3.943 -4.479469,8.399 -5.325138,13.083 a 25.478172,30.64 0 0 0 -0.572094,6.396 c 0.0183,5.831 1.446866,11.571 4.163485,16.729995 -2.546986,3.87201 -4.285721,8.22 -5.110602,12.78201 a 25.347621,30.483 0 0 0 0.345086,14.41199 c 1.072679,4.732998 3.078336,9.203998 5.900559,13.151998 11.877618,17.011 35.393374,22.053 52.299272,11.24 l 29.762238,-19.001 c 4.027946,-2.532 7.482126,-5.877998 10.141386,-9.824998 2.65841,-3.947 4.46282,-8.40699 5.29686,-13.093 0.3825,-2.107 0.57458,-4.244 0.5721,-6.386 -0.007,-5.81999 -1.41778,-11.550995 -4.11194,-16.708995 2.54616,-3.869 4.28489,-8.213 5.11143,-12.771 0.36921,-2.109 0.55713,-4.245 0.56212,-6.386 0.002,-7.595 -2.37152,-15 -6.78697,-21.178 z"
                id="path598"
              ></path>
              <path
                fill="#FFFFFF"
                d="m 55.218941,112.66204 a 28.463375,34.23 0 0 1 -5.953776,0.76 c -3.820895,0.001 -7.585244,-0.925 -10.970416,-2.7 -3.384341,-1.774 -6.288887,-4.343 -8.464177,-7.487 -2.655917,-3.716 -4.082827,-8.171 -4.080332,-12.74 a 15.657767,18.83 0 0 1 0.332613,-3.833 15.424937,18.55 0 0 1 0.719276,-2.782 l 0.562116,-1.708 1.51921,1.156 c 3.528195,2.591 7.470493,4.564 11.658097,5.834 l 1.104275,0.333 -0.103941,1.104 v 0.573 c -0.0025,1.381 0.427408,2.73 1.228174,3.854 0.646933,0.958 1.51838,1.744 2.537839,2.288 a 8.2621121,9.936 0 0 0 3.311997,0.837 8.2513022,9.923 0 0 0 1.79029,-0.229 7.2717563,8.745 0 0 0 1.832699,-0.802 l 29.760566,-19.094 c 0.892236,-0.566 1.627311,-1.349 2.135377,-2.276 0.507236,-0.927 0.771662,-1.968 0.768337,-3.026 -0.0084,-1.381 -0.449027,-2.725 -1.259773,-3.844 -0.656912,-0.946 -1.533347,-1.718 -2.553637,-2.252 a 8.3128357,9.997 0 0 0 -3.307008,-0.81 8.246313,9.917 0 0 0 -1.79029,0.23 6.9383115,8.344 0 0 0 -1.821058,0.801 l -11.346268,7.25 a 24.375558,29.314 0 0 1 -6.04774,2.656 c -1.945787,0.502 -3.945624,0.758 -5.954608,0.76 -3.820063,0 -7.582749,-0.926 -10.967089,-2.698 -3.384341,-1.772 -6.289718,-4.338 -8.467502,-7.478 -2.652591,-3.718 -4.079502,-8.172 -4.080334,-12.74 0.0016,-1.285 0.113089,-2.567 0.332615,-3.833 0.509728,-2.816 1.597374,-5.495 3.196411,-7.867 1.598207,-2.373 3.67205,-4.387 6.089317,-5.914 l 29.792168,-18.99 c 1.869286,-1.19 3.908205,-2.09 6.04774,-2.667 1.945787,-0.499 3.945625,-0.75 5.953776,-0.75 3.82921,-0.01 7.603538,0.91 10.999519,2.681 3.395981,1.77 6.311338,4.34 8.497439,7.486 2.636787,3.727 4.045417,8.184 4.028777,12.75 a 15.748404,18.939 0 0 1 -0.33344,3.844 15.407475,18.529 0 0 1 -0.71845,2.781 l -0.56211,1.708 -1.519216,-1.114 c -3.525699,-2.595 -7.468833,-4.568 -11.658096,-5.834 l -1.104275,-0.343 0.103941,-1.105 v -0.572 c 0,-1.385 -0.429072,-2.735 -1.228174,-3.865 -0.65608,-0.945 -1.530022,-1.716 -2.549481,-2.25 a 8.3086779,9.992 0 0 0 -3.301186,-0.813 8.2213671,9.887 0 0 0 -1.768671,0.271 6.8185708,8.2 0 0 0 -1.831867,0.802 l -29.792165,18.99 a 5.8797701,7.071 0 0 0 -1.836857,1.79 4.7505482,5.713 0 0 0 -0.962914,2.377 5.0365955,6.057 0 0 0 -0.135541,1.104 c -8.31e-4,1.378 0.42824,2.722 1.228174,3.844 0.655248,0.945 1.530021,1.717 2.548649,2.25 a 8.2986996,9.98 0 0 0 3.301186,0.812 8.2471446,9.918 0 0 0 1.79029,-0.23 6.9433007,8.35 0 0 0 1.832699,-0.801 l 11.367057,-7.292 a 24.218399,29.125 0 0 1 6.04774,-2.656 28.52574,34.305 0 0 1 5.953776,-0.76 c 3.821727,0 7.586076,0.925 10.972078,2.697 3.386003,1.772 6.293877,4.339 8.473325,7.48 2.652591,3.717 4.079498,8.171 4.080338,12.74 0.003,1.299 -0.11226,2.596 -0.34343,3.874 -0.506403,2.817 -1.594046,5.497 -3.192254,7.87 -1.599037,2.372 -3.673715,4.385 -6.093476,5.911 l -29.739779,18.99 a 24.308205,29.233 0 0 1 -6.057719,2.667 z"
                id="path600"
              ></path>
            </svg>
          }
          name="Svelte"
        />
        <ButtonWithSVG
          svg={
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="32"
              height="32"
              enable-background="new 0 0 128 128"
              viewBox="0 0 128 128"
            >
              <path d="M90 39c0-14.3-11.7-26-26-26S38 24.7 38 39s11.7 26 26 26S90 53.3 90 39zM44 39l12.5-7.3c2-1.2 4.5.3 4.5 2.6V39c0 1.7 1.3 3 3 3h19.7C82.3 51.6 74 59 64 59 53 59 44 50 44 39zM114.6 91.7c-.8-1.4-2.7-1.9-4.1-1.1-1.4.8-1.9 2.7-1.1 4.1 0 0 10.8 18.6 10.8 18.6.5.8.8 1.7.8 2.7 0 2.8-2.2 5-5 5h-14.7l3.2-38.3c.2-2.5-.6-5-2.3-6.8S98 73 95.5 73H31.7c-2.5 0-5 1.1-6.7 3-1.7 1.9-2.5 4.4-2.3 7l4 38.1H12c-2.8 0-5-2.2-5-5 0-.9.3-1.8.7-2.6.1-.1 10.9-18.7 10.9-18.7.8-1.4.3-3.3-1.1-4.1-1.4-.8-3.3-.3-4.1 1.1L2.8 110c0 0 0 0 0 0-1.2 1.8-1.8 3.9-1.8 6 0 6.1 4.9 11 11 11h18v0c.1 0 .2 0 .3 0l27.6 0c0 0 .1 0 .1 0h58c6.1 0 11-4.9 11-11 0-2.1-.6-4.2-1.8-6C125.2 110 114.6 91.7 114.6 91.7zM63 105c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6S66.3 105 63 105z"></path>
            </svg>
          }
          name="Non IT"
        />
      </div>
    </div>
  );
}

const ButtonWithSVG = ({ svg, name, onClick }) => {
  const [selected, setSelected] = useState(false);

  const handleClick = () => {
    if (name !== "Non IT") {
      isNonItTechnology = selected;
    }

    setSelected(!selected);
    onClick && onClick(!selected); // Passes the current selection state to the parent component
  };

  return (
    <button
      className={`hoverable tech-btn ${selected ? "selected" : ""}`}
      onClick={handleClick}
      style={{ backgroundColor: selected ? "#2A5B51" : "#00000000" }}
    >
      <div className="svgname">
        <div className="">
          <span
            style={{
              marginRight: "5px",
              fill: selected ? "#FFFFFF" : "#2A5B51",
            }}
          >
            {svg}
          </span>
        </div>
        <div>
          <span>{name}</span>
        </div>
      </div>
    </button>
  );
};

//Slider
const Slider = ({ value, onChange }) => {
  const handleChange = (event) => {
    developerCount = parseInt(event.target.value);
    onChange(parseInt(event.target.value));
  };

  return (
    <div className="slider-container">
      <input
        type="range"
        min="1"
        max="10"
        value={value}
        step="1"
        id="slider"
        onChange={handleChange}
      />

      <div
        className="indicator-box"
        style={{ left: `calc(${(value / 10) * 100}% - 10px)` }}
      >
        {value}
      </div>
      <div className="ruler">
        {[...Array(10)].map((_, index) => (
          <span key={index} className={value === index + 1 ? "bold" : ""}>
            {index + 1}
          </span>
        ))}
      </div>
    </div>
  );
};

const RadioGroup = ({ name, value, onChange }) => {
  const handleChange = (event) => {
    onChange(event.target.value);
  };

  return (
    <div className="buttonContainer">
      <input
        type="radio"
        className="seniority"
        id={`${name}-beginner`}
        name={name}
        value="Junior"
        checked={value === "Junior"}
        onChange={handleChange}
      />
      <label className="labelbtn" htmlFor={`${name}-beginner`}>
        Junior
      </label>
      <input
        type="radio"
        className="seniority"
        id={`${name}-intermediate`}
        name={name}
        value="Intermediate"
        checked={value === "Intermediate" || value === undefined}
        onChange={handleChange}
      />
      <label className="labelbtn" htmlFor={`${name}-intermediate`}>
        Intermediate
      </label>
      <input
        type="radio"
        className="seniority"
        id={`${name}-expert`}
        name={name}
        value="Expert"
        checked={value === "Expert"}
        onChange={handleChange}
      />
      <label className="labelbtn" htmlFor={`${name}-expert`}>
        Expert
      </label>
    </div>
  );
};

const SliderWithRadioGroup = () => {
  const [sliderValue, setSliderValue] = useState(1);
  const [radioValues, setRadioValues] = useState(
    Array(10).fill("Intermediate")
  );

  const handleSliderChange = (value) => {
    setSliderValue(parseInt(value));
  };

  const handleRadioChange = (index, value) => {
    console.log("handleRadioChange radioValues ", [...radioValues]);
    const updatedValues = [...radioValues];
    updatedValues[index] = value;

    console.log("handleRadioChange updatedValues ", updatedValues);
    seniorityArray = [...updatedValues];
    setRadioValues(updatedValues);
  };

  return (
    <div>
      <p>How many developers</p>
      <div className="slider">
        <Slider value={sliderValue} onChange={handleSliderChange} />
        <p>Seniority</p>
        {[...Array(sliderValue)].map((_, index) => (
          <div key={index}>
            <RadioGroup
              name={`radioGroup${index}`}
              onChange={(value) => handleRadioChange(index, value)}
              value={radioValues[index]}
            />
          </div>
        ))}
      </div>
    </div>
  );
};

//Ivolvement
function RadioButtons() {
  const [selectedValue, setSelectedValue] = useState("medium");

  const handleChange = (event) => {
    setSelectedValue(event.target.value);
    selectedInvolvementValue = event.target.value;
  };

  return (
    <div>
      <p>Your involvement</p>

      <div
        style={{
          display: "flex",
          justifyContent: "space-around",
          verticalAlign: "auto",
          border: "1px solid black",
          borderRadius: "10px",
          padding: "5px",
          backgroundColor: "white",
        }}
      >
        <input
          type="radio"
          id="low"
          name="priority"
          value="low"
          checked={selectedValue === "low"}
          onChange={handleChange}
          style={{ display: "none" }}
        />
        <label
          htmlFor="low"
          style={{
            display: "inline-block",
            padding: "10px 20px",
            fontSize: "16px",
            backgroundColor: "rgba(224, 224, 224, 0)",
            border: "none",
            width: "100%",
            borderRadius: "5px",
            cursor: "pointer",
            userSelect: "none",
            textAlign: "center",
            backgroundColor:
              selectedValue === "low" ? "rgb(42, 91, 81)" : "transparent",
            color: selectedValue === "low" ? "white" : "inherit",
          }}
        >
          Low
        </label>

        <input
          type="radio"
          id="medium"
          name="priority"
          value="medium"
          checked={selectedValue === "medium"}
          onChange={handleChange}
          style={{ display: "none" }}
        />
        <label
          htmlFor="medium"
          style={{
            display: "inline-block",
            padding: "10px 20px",
            fontSize: "16px",
            backgroundColor: "rgba(224, 224, 224, 0)",
            border: "none",
            width: "100%",
            borderRadius: "5px",
            cursor: "pointer",
            userSelect: "none",
            textAlign: "center",
            backgroundColor:
              selectedValue === "medium" ? "rgb(42, 91, 81)" : "transparent",
            color: selectedValue === "medium" ? "white" : "inherit",
          }}
        >
          Medium
        </label>

        <input
          type="radio"
          id="high"
          name="priority"
          value="high"
          checked={selectedValue === "High"}
          onChange={handleChange}
          style={{ display: "none" }}
        />
        <label
          htmlFor="high"
          style={{
            display: "inline-block",
            padding: "10px 20px",
            fontSize: "16px",
            backgroundColor: "rgba(224, 224, 224, 0)",
            border: "none",
            width: "100%",
            borderRadius: "5px",
            cursor: "pointer",
            userSelect: "none",
            textAlign: "center",
            backgroundColor:
              selectedValue === "high" ? "rgb(42, 91, 81)" : "transparent",
            color: selectedValue === "high" ? "white" : "inherit",
          }}
        >
          High
        </label>
      </div>
      <p>Selected value: {selectedValue}</p>
    </div>
  );
}

function Io({ totalInvestment, totalSavings }) {
  const value = localStorage.getItem("saving");
  console.log("value", value);
  return (
    <div>
      <form action="">
        <label for="budget">
          <p>What is Your Budget Today</p>
          <div class="money">
            <span class="euro">€</span>
            <input type="text" placeholder="Budget Amount" class="ip" />
            <a class="euro">EUR</a>
          </div>
        </label>
        <div class="ted">
          <div class="bud">
            <label for="name">
              <div>Name</div>
              <input
                type="text"
                id="name"
                placeholder="Name*"
                required=""
                class="subbud "
              />
            </label>
          </div>
          <div class="bud">
            <label for="email">
              <div>E-Mail</div>
              <input
                type="email"
                id="email"
                placeholder="E-Mail*"
                required=""
                class="subbud"
              />
            </label>
          </div>
        </div>
      </form>
      <div class="investbox">
        <div>
          <h3>Your Investment for the month</h3>
          <p>€ {value} EUR</p>
        </div>
        <div>
          <h3>Your Savings</h3>
          <p>€ {totalSavings} EUR</p>
        </div>
      </div>
    </div>
  );
}

function BudgetInput() {
  return (
    <div class="budget-container">
      <RadioButtons />
      <Io totalInvestment={totalInvestment} totalSavings={totalSavings} />
    </div>
  );
}

//Button

function BookBtn() {
  const openCalendlyPage = () => {
    // Open Calendly page in a new window
    window.open("https://calendly.com/dk2640140/30min");
  };

  return (
    <div>
      <button className="btn" onClick={openCalendlyPage}>
        Book a meeting with us
      </button>
    </div>
  );
}
//Calculation
const InvestmentCalculator = () => {
  const [render, setrender] = useState(0);
  // State variables
  const [technicalInvolvement, setTechnicalInvolvement] = useState("high");
  const [nonTechnicalInvolvement, setNonTechnicalInvolvement] =
    useState("high");
  const [nonTechLevel, setNonTechLevel] = useState(false);
  const [budgetEntered, setBudgetEntered] = useState(false);
  const [budget, setBudget] = useState({
    Junior: { Technical: 5150, NonTechnical: 3225 },
    Intermediate: { Technical: 6450, NonTechnical: 3850 },
    Expert: { Technical: 7750, NonTechnical: 4500 },
  });
  // const [developersCount, setDevelopersCount] = useState({
  //   Junior: 0,
  //   Intermediate: 0,
  //   Expert: 0,
  // });

  let developersCount = { Junior: 2, Intermediate: 0, Expert: 0 };

  // Constants for investment calculations
  const technicalInvestment = {
    high: { Junior: 2500, Intermediate: 3300, Expert: 4200 },
    medium: { Junior: 3400, Intermediate: 4800, Expert: 6400 },
    low: { Junior: 3900, Intermediate: 5500, Expert: 7300 },
  };

  const nonTechnicalInvestment = {
    high: { Junior: 1500, Intermediate: 1700, Expert: 2000 },
    medium: { Junior: 2000, Intermediate: 2200, Expert: 2500 },
    low: { Junior: 2500, Intermediate: 2700, Expert: 3000 },
  };

  const convertToDevelopersCount = (arr) => {
    const newCount = { Junior: 0, Intermediate: 0, Expert: 0 };

    // Count occurrences of each developer type
    arr.forEach((item) => {
      if (newCount.hasOwnProperty(item)) {
        newCount[item]++;
      }
    });

    return newCount;
  };

  // Calculate investment
  const calculateInvestment = () => {
    let totalInvestment = 0;

    for (const level in developersCount) {
      totalInvestment +=
        developersCount[level] *
        (nonTechLevel
          ? nonTechnicalInvestment[nonTechnicalInvolvement][level]
          : technicalInvestment[technicalInvolvement][level]);
    }
    return totalInvestment;
  };

  // Calculate savings
  const calculateSavings = () => {
    const calculatedBudget = calculateBudgetCalculated();
    const calculatedInvestment = calculateInvestment();
    const savings =
      (calculatedBudget ? calculatedBudget : calculateBudgetCalculated()) -
      calculatedInvestment;
    return savings;
  };

  // Calculate budget calculated
  const calculateBudgetCalculated = () => {
    let totalBudget = 0;
    for (const level in developersCount) {
      totalBudget +=
        developersCount[level] *
        (nonTechLevel ? budget[level].NonTechnical : budget[level].Technical);
    }
    return totalBudget;
  };

  // Handle form submit
  const handleSubmit = (e) => {
    e.preventDefault();

    setNonTechLevel(isNonItTechnology);
    setTechnicalInvolvement(selectedInvolvementValue);
    setNonTechnicalInvolvement(selectedInvolvementValue);

    developersCount = convertToDevelopersCount(
      seniorityArray.slice(0, developerCount)
    );

    console.log("Total Investment:", calculateInvestment());
    console.log("Total Budget:", calculateBudgetCalculated());
    console.log("Total Savings:", calculateSavings());

    totalInvestment = calculateInvestment();
    totalSavings = calculateSavings();
    alert(totalSavings);
    localStorage.setItem("saving", totalInvestment);
    setrender(totalSavings);
  };

  return (
    <div>
      <h2>Investment Calculator</h2>
      <form onSubmit={handleSubmit}>
        <button type="submit">Calculate</button>
      </form>
    </div>
  );
};
// function App() {
//   return (
//     <Router>
//       <Switch>
//         <Route exact path="/">
//           <HomePage />
//         </Route>
//         <Route path="/calendly">
//           <CalendlyPage />
//         </Route>
//       </Switch>
//     </Router>
//   );
// }
// function CalendlyPage() {
//   return (
//     <div>
//       <div
//         className="calendly-inline-widget"
//         data-url="https://calendly.com/dhayaqty/30min"
//         //name and email
//         style={{ minWidth: "320px", height: "700px" }}
//       ></div>
//       <script
//         type="text/javascript"
//         src="https://assets.calendly.com/assets/external/widget.js"
//         async
//       ></script>
//     </div>
//   );
// }
// export { CalendlyPage };
// export { App };
export { InvestmentCalculator };

export { Logoo };

export { BookBtn };

export { BudgetInput };

export { SliderWithRadioGroup };

export { TechContainer };

